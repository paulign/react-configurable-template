{"version":3,"sources":["reducers/templates.js","reducers/houses.js","reducers/index.js","actions/types.js","components/Image.jsx","components/Address.jsx","components/Price.jsx","components/Area.jsx","containers/FieldTemplate.jsx","containers/CardTemplate.jsx","views/CardsList.jsx","api/index.js","layout/Header.jsx","actions/templates.js","containers/AppContainer.jsx","actions/houses.js","App.js","serviceWorker.js","index.js"],"names":["INITIAL_STATE","isLoading","templates","selectedIndex","houses","combineReducers","state","arguments","length","undefined","action","type","Object","objectSpread","payload","Image","value","this","props","react_default","a","createElement","src","alt","Component","Address","reactstrap_es","className","Price","FieldTemplate","components","IMAGE","ADDRESS","PRICE","AREA","Area","_this$props","component","field","concat","children","defaultTemplate","CardTemplate","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","buildCard","template","house","map","item","index","FieldTemplate_FieldTemplate","assign","key","connect","CardsList","id","xs","sm","md","lg","containers_CardTemplate","api_config","apiRequest","_ref2","asyncToGenerator","regenerator_default","mark","_callee","_ref","url","_ref$method","method","_ref$body","body","api_url","headers","res","json","wrap","_context","prev","next","Headers","append","fetch","sent","ok","abrupt","Promise","reject","error","message","t0","console","log","stop","_x","apply","Header","toggle","bind","assertThisInitialized","isOpen","setState","changeTemplate","color","dark","fixed","expand","href","onClick","navbar","nav","inNavbar","caret","right","active","AppContainer","getTemplates","getHouses","templatesLoading","itemsLoading","layout_Header","views_CardsList","dispatch","response","data","store","createStore","rootReducer","compose","applyMiddleware","thunk","App","react_redux_es","containers_AppContainer","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6c7f11ee.chunk.js","sourcesContent":["import { GET_TEMPLATES_ERROR, GET_TEMPLATES, GET_TEMPLATES_SUCCESS, ON_CHANGE_TEMPLATE } from '../actions/types';\r\n\r\nconst INITIAL_STATE = {\r\n    isLoading: false,\r\n    templates: [],\r\n    selectedIndex: 0\r\n};\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n        case GET_TEMPLATES:\r\n            return {\r\n                ...state,\r\n                isLoading: true\r\n            }\r\n        case GET_TEMPLATES_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isLoading: false,\r\n                templates: action.payload || [],\r\n                selectedIndex: 0\r\n            }\r\n        case GET_TEMPLATES_ERROR:\r\n            return {\r\n                ...state,\r\n                isLoading: false\r\n            }\r\n        case ON_CHANGE_TEMPLATE:\r\n            return {\r\n                ...state,\r\n                selectedIndex: action.payload || 0\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import { GET_HOUSES, GET_HOUSES_ERROR, GET_HOUSES_SUCCESS } from '../actions/types';\r\n\r\nconst INITIAL_STATE = {\r\n    isLoading: false,\r\n    houses: []\r\n};\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n        case GET_HOUSES:\r\n            return {\r\n                ...state,\r\n                isLoading: true\r\n            }\r\n        case GET_HOUSES_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isLoading: false,\r\n                houses: action.payload || [],\r\n                selectedIndex: 0\r\n            }\r\n        case GET_HOUSES_ERROR:\r\n            return {\r\n                ...state,\r\n                isLoading: false\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import { combineReducers } from 'redux';\r\nimport templates from './templates';\r\nimport houses from './houses';\r\n\r\nexport default combineReducers({\r\n    templates,\r\n    houses\r\n});","export const GET_TEMPLATES = \"GET_TEMPLATES\";\r\nexport const GET_TEMPLATES_SUCCESS = \"GET_TEMPLATES_SUCCESS\";\r\nexport const GET_TEMPLATES_ERROR = \"GET_TEMPLATES_ERROR\";\r\nexport const ON_CHANGE_TEMPLATE = \"ON_CHANGE_TEMPLATE\";\r\n\r\nexport const GET_HOUSES = \"GET_HOUSES\";\r\nexport const GET_HOUSES_SUCCESS = \"GET_HOUSES_SUCCESS\";\r\nexport const GET_HOUSES_ERROR = \"GET_HOUSES_ERROR\";","import React, { Component } from 'react';\r\n\r\nexport default class Image extends Component {\r\n    render() {\r\n        const { value } = this.props;\r\n        return (\r\n            <img\r\n                src={value[0]}\r\n                alt=\"\"\r\n            />\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { CardSubtitle } from 'reactstrap';\r\n\r\nexport default class Address extends Component {\r\n    render() {\r\n        const {value} = this.props;\r\n        return (\r\n            <CardSubtitle className=\"item-address\">\r\n                {value}\r\n            </CardSubtitle>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { CardTitle } from 'reactstrap';\r\nexport default class Price extends Component {\r\n    render() {\r\n        const {value} = this.props;\r\n        return (\r\n            <CardTitle className=\"item-price\">\r\n                ${value}\r\n            </CardTitle>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { CardText } from 'reactstrap';\r\n\r\nexport default class Image extends Component {\r\n    render() {\r\n        const {value} = this.props;\r\n\r\n        if(!value) {\r\n            return null;\r\n        }\r\n\r\n        return (\r\n            <CardText className=\"item-area\">\r\n                {value} sq. ft.\r\n            </CardText>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport Image from '../components/Image';\r\nimport Address from '../components/Address';\r\nimport Price from '../components/Price';\r\nimport Area from '../components/Area';\r\nimport { CardBody } from 'reactstrap';\r\n\r\nexport default class FieldTemplate extends Component {\r\n    components = {\r\n        IMAGE: Image,\r\n        ADDRESS: Address,\r\n        PRICE: Price,\r\n        AREA: Area\r\n    }\r\n\r\n    render() {\r\n        const { component, field } = this.props;\r\n        const Component = this.components[component] || null;\r\n\r\n        if (!Component) {\r\n            return null;\r\n        }\r\n\r\n        return (\r\n            <CardBody className={`field-template ${field}-component`}>\r\n                {this.props.children}\r\n                <Component {...this.props} />\r\n            </CardBody>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Card } from 'reactstrap';\r\n\r\nimport FieldTemplate from './FieldTemplate';\r\n\r\nconst defaultTemplate = [\r\n    {\r\n        component: \"IMAGE\",\r\n        field: \"images\"\r\n    },\r\n    {\r\n        component: \"ADDRESS\",\r\n        field: \"full_address\"\r\n    },\r\n    {\r\n        component: \"PRICE\",\r\n        field: \"price\"\r\n    },\r\n    {\r\n        component: \"AREA\",\r\n        field: \"area\"\r\n    }\r\n]\r\n\r\nclass CardTemplate extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n\r\n        }\r\n    }\r\n\r\n    buildCard = (template) => {\r\n        const { house } = this.props;\r\n\r\n        if(!template) {\r\n            return null;\r\n        }\r\n\r\n        return template.map((item, index) => {\r\n            if (!item.children) {\r\n                return <FieldTemplate {...item} key={index} value={house[item.field]} />\r\n            } else {\r\n                return (\r\n                    <FieldTemplate {...item} key={index} value={house[item.field]}>\r\n                        {this.buildCard(item.children)}\r\n                    </FieldTemplate>\r\n                );\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { templates, selectedIndex } = this.props;\r\n        let template = { ...defaultTemplate };\r\n\r\n        if (templates && templates.length) {\r\n            template = templates[selectedIndex].template;\r\n        }\r\n\r\n        return (\r\n            <Card className=\"item-card\">\r\n                {this.buildCard(template)}\r\n            </Card>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        templates: state.templates.templates,\r\n        selectedIndex: state.templates.selectedIndex || 0\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(CardTemplate);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux'\r\nimport { Container, Row, Col } from 'reactstrap';\r\nimport CardTemplate from '../containers/CardTemplate';\r\n\r\nclass CardsList extends Component {\r\n\r\n    render() {\r\n        const { houses } = this.props;\r\n\r\n        return (\r\n            <Container className=\"py-3\">\r\n                {!!houses && !!houses.length && (\r\n                    <Row className=\"align-items-stretch\">\r\n                        {houses.map(item => (\r\n                            <Col key={item.id} xs={12} sm={6} md={4} lg={3}>\r\n                                <CardTemplate house={item} />\r\n                            </Col>\r\n                        ))}\r\n                    </Row>\r\n                )}\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        houses: state.houses.houses,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(CardsList);","const api_config = {\r\n    api_url: 'https://demo4452328.mockable.io/',\r\n}\r\n\r\nexport const apiRequest = async ({ url, method = 'GET', body = null}) => {\r\n    try {\r\n        const { api_url } = api_config;\r\n        const headers = new Headers();\r\n        headers.append(\"Content-Type\", \"application/json\");\r\n        \r\n\r\n        const res = await fetch(`${api_url}${url}`, {\r\n            method,\r\n            headers,\r\n            body,\r\n        });\r\n\r\n        let json = await res.json();\r\n\r\n        if (res.ok) {\r\n            return json;\r\n        } else {\r\n            return Promise.reject(json || { error: true, message: 'Something went wrong...' });\r\n        }\r\n    } catch (error) {\r\n        console.log(error);\r\n        return Promise.reject(error);\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n    Collapse,\r\n    Navbar,\r\n    Container,\r\n    NavbarToggler,\r\n    NavbarBrand,\r\n    Nav,\r\n    UncontrolledDropdown,\r\n    DropdownToggle,\r\n    DropdownMenu,\r\n    DropdownItem\r\n} from 'reactstrap';\r\nimport { changeTemplate } from \"../actions\";\r\n\r\nclass Header extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.toggle = this.toggle.bind(this);\r\n        this.state = {\r\n            isOpen: false\r\n        };\r\n    }\r\n    toggle() {\r\n        this.setState({\r\n            isOpen: !this.state.isOpen\r\n        });\r\n    }\r\n    render() {\r\n        const { templates, selectedIndex, changeTemplate } = this.props;\r\n\r\n        return (\r\n            <div>\r\n                <Navbar color=\"dark\" dark fixed=\"top\" expand=\"md\">\r\n                    <Container>\r\n                        <NavbarBrand href=\"/\">Test Task</NavbarBrand>\r\n                        <NavbarToggler onClick={this.toggle} />\r\n                        <Collapse isOpen={this.state.isOpen} navbar>\r\n                            <Nav className=\"ml-auto\" navbar>\r\n                                {!!templates && !!templates.length && (\r\n                                    <UncontrolledDropdown nav inNavbar>\r\n                                        <DropdownToggle nav caret>\r\n                                            Template {templates[selectedIndex].id}\r\n                                        </DropdownToggle>\r\n                                        <DropdownMenu right>\r\n                                            {templates.map((item, index) => {\r\n                                                return (\r\n                                                    <DropdownItem onClick={() => changeTemplate(index)} key={item.id} active={index === selectedIndex}>\r\n                                                        Template {item.id}\r\n                                                    </DropdownItem>\r\n                                                )\r\n                                            })}\r\n                                        </DropdownMenu>\r\n                                    </UncontrolledDropdown>\r\n                                )}\r\n                            </Nav>\r\n                        </Collapse>\r\n                    </Container>\r\n                </Navbar>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        templates: state.templates.templates,\r\n        selectedIndex: state.templates.selectedIndex || 0\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { changeTemplate })(Header)","import { apiRequest } from '../api';\r\nimport { GET_TEMPLATES_ERROR, GET_TEMPLATES, GET_TEMPLATES_SUCCESS, ON_CHANGE_TEMPLATE } from './types';\r\n\r\nexport const getTemplates = () => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: GET_TEMPLATES });\r\n        const templates = await apiRequest({ url: 'templates' });\r\n        dispatch({ type: GET_TEMPLATES_SUCCESS, payload: templates || [] });\r\n    } catch (error) {\r\n        console.log(error);\r\n        dispatch({ type: GET_TEMPLATES_ERROR })\r\n    }\r\n}\r\n\r\nexport const changeTemplate = (index) => {\r\n    return {\r\n        type: ON_CHANGE_TEMPLATE,\r\n        payload: index\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport CardsList from '../views/CardsList';\r\nimport Header from '../layout/Header';\r\nimport { getTemplates, getHouses } from '../actions';\r\n\r\nclass AppContainer extends Component {\r\n    componentDidMount() {\r\n        this.props.getTemplates();\r\n        this.props.getHouses();\r\n    }\r\n\r\n    render() {\r\n        const { templatesLoading, itemsLoading } = this.props;\r\n        if (templatesLoading || itemsLoading) {\r\n            return <h1 className=\"p-5 text-center\">Loading...</h1>\r\n        }\r\n        return (\r\n            <div>\r\n                <header>\r\n                    <Header />\r\n                </header>\r\n                <div className=\"main\">\r\n                    <CardsList />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        templatesLoading: state.templates.isLoading,\r\n        itemsLoading: state.houses.isLoading\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { getTemplates, getHouses })(AppContainer);","import { apiRequest } from '../api';\r\nimport { GET_HOUSES, GET_HOUSES_ERROR, GET_HOUSES_SUCCESS } from './types';\r\n\r\nexport const getHouses = () => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: GET_HOUSES });\r\n        const response = await apiRequest({ url: 'properties' });\r\n        const houses = response ? response.data : [];\r\n        dispatch({ type: GET_HOUSES_SUCCESS, payload: houses || [] });\r\n    } catch (error) {\r\n        console.log(error);\r\n        dispatch({ type: GET_HOUSES_ERROR })\r\n    }\r\n}","import React, { Component } from 'react';\nimport './assets/scss/style.scss';\nimport { applyMiddleware, compose, createStore } from 'redux';\nimport thunk from \"redux-thunk\";\nimport { Provider } from 'react-redux';\n\nimport rootReducer from './reducers';\nimport AppContainer from './containers/AppContainer';\n\nconst store = createStore(\n  rootReducer,\n  compose(\n    applyMiddleware(\n      thunk\n    )\n  )\n);\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <AppContainer />\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import 'react-app-polyfill/ie9';\nimport 'core-js/es/map'\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}